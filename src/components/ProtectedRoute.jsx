import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { checkSession } from "../services/tokenService";
import Layout from "./Layout";

/**
 * Component Route ƒë∆∞·ª£c b·∫£o v·ªá - ki·ªÉm tra x√°c th·ª±c tr∆∞·ªõc khi render children
 * @param {Object} props - Props c·ªßa component
 * @param {React.ReactNode} props.children - C√°c component con ƒë·ªÉ render n·∫øu ƒë√£ x√°c th·ª±c
 * @returns {React.ReactNode} Loading spinner, redirect, ho·∫∑c children
 */
function ProtectedRoute({ children }) {
  const [isAuthenticated, setIsAuthenticated] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const verifyAuth = async () => {
      try {
        const isValid = await checkSession();
        setIsAuthenticated(isValid);
        
        if (!isValid) {
          navigate("/login", { replace: true });
        }
      } catch (error) {
        console.error("L·ªói x√°c th·ª±c:", error);
        setIsAuthenticated(false);
        navigate("/login", { replace: true });
      }
    };

    verifyAuth();
  }, [navigate]);

  // Hi·ªÉn th·ªã loading trong khi ki·ªÉm tra x√°c th·ª±c
  if (isAuthenticated === null) {
    return (
      <Layout>
        <div style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          height: "calc(100vh - 64px)",
          fontSize: "18px",
          color: "#4a5568"
        }}>
          <div style={{ textAlign: "center" }}>
            <div style={{ 
              marginBottom: "10px",
              fontSize: "20px"
            }}>
              üîí
            </div>
            ƒêang x√°c th·ª±c...
          </div>
        </div>
      </Layout>
    );
  }

  // N·∫øu ch∆∞a x√°c th·ª±c, tr·∫£ v·ªÅ null (s·∫Ω redirect)
  if (!isAuthenticated) {
    return null;
  }

  // N·∫øu ƒë√£ x√°c th·ª±c, render children v·ªõi Layout
  return (
    <Layout>
      {children}
    </Layout>
  );
}

export default ProtectedRoute;
